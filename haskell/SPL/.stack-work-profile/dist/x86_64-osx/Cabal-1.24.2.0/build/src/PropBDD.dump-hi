
==================== FINAL INTERFACE ====================
2019-02-22 02:31:26.4648 UTC

interface SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD [hpc] 8002
  interface hash: 47f1febc5cc2b3f048032d67feeee0c2
  ABI hash: d25d1d6bf25f26686f7343a37ea0f723
  export-list hash: 40654a78275b99c61232276625bd869a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab543699bd81e87f29f5f39f1e257203
  sig of: Nothing
  used TH splices: False
  where
exports:
  PropBDD.conj
  PropBDD.disj
  PropBDD.ff
  PropBDD.impl
  PropBDD.implies
  PropBDD.manager
  PropBDD.mkUniverse
  PropBDD.neg
  PropBDD.queryOrUpdate
  PropBDD.sat
  PropBDD.tautology
  PropBDD.tt
  PropBDD.unsat
  PropBDD.Prop
  PropBDD.Universe
module dependencies:
package dependencies: base-4.9.1.0
                      cudd-0.1.0.4@cudd-0.1.0.4-FSAkhUabwhMcZB0faAolK ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  cudd-0.1.0.4@cudd-0.1.0.4-FSAkhUabwhMcZB0faAolK:Cudd.Cudd 9860d33be2e37030dc3b69e48d1d46f1
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
74c75666210a220ef6576ced8bb084cb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PropBDD.$trModule2
                   PropBDD.$trModule1) -}
bea86805aaa09f00d4c7ff1656b963a9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PropBDD"#) -}
8ad7af1d55a17d59f85e91ca46e4c398
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG"#) -}
9041b52fec2b1117a30415f595661f09
  type Prop = Cudd.Cudd.DDNode
207c8b37a80640dc1c1726230a7d7fa4
  type Universe = [PropBDD.Prop]
02f383934e015801e33ca175cbfc79a2
  conj :: [PropBDD.Prop] -> PropBDD.Prop
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.conj} True True} GHC.Base.foldr
                                                                                       @ Cudd.Cudd.DDNode
                                                                                       @ Cudd.Cudd.DDNode
                                                                                       PropBDD.conj1
                                                                                       PropBDD.tt) -}
f7ab504344a5efa2f036ff1a0b003f46
  conj1 :: Cudd.Cudd.DDNode -> Cudd.Cudd.DDNode -> Cudd.Cudd.DDNode
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.conj} False True} Cudd.Cudd.bAnd
                                                                                        PropBDD.tt1
                                                                                          `cast`
                                                                                        (Sym (Cudd.Cudd.N:DDManager[0]))) -}
cfed83372ffa744c9e6fe36fdef9e10c
  disj :: [PropBDD.Prop] -> PropBDD.Prop
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.disj} True True} GHC.Base.foldr
                                                                                       @ Cudd.Cudd.DDNode
                                                                                       @ Cudd.Cudd.DDNode
                                                                                       PropBDD.disj1
                                                                                       PropBDD.ff) -}
a87ce34e3abe1278d4bffa3ebcb5f044
  disj1 :: Cudd.Cudd.DDNode -> Cudd.Cudd.DDNode -> Cudd.Cudd.DDNode
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.disj} False True} Cudd.Cudd.bOr
                                                                                        PropBDD.tt1
                                                                                          `cast`
                                                                                        (Sym (Cudd.Cudd.N:DDManager[0]))) -}
0dd34fcc3994fff47a7cca3c9f4a9095
  ff :: Cudd.Cudd.DDNode
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.ff} True True} Cudd.Cudd.readLogicZero
                                                                                     PropBDD.tt1
                                                                                       `cast`
                                                                                     (Sym (Cudd.Cudd.N:DDManager[0]))) -}
d9551b203922f01d31cfce4e81fb6262
  impl :: Cudd.Cudd.DDNode -> PropBDD.Prop -> PropBDD.Prop
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (p :: Cudd.Cudd.DDNode) (q :: PropBDD.Prop) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.impl} True True} PropBDD.disj
                                                                                       (GHC.Types.:
                                                                                          @ PropBDD.Prop
                                                                                          (PropBDD.neg
                                                                                             p)
                                                                                          (GHC.Types.:
                                                                                             @ PropBDD.Prop
                                                                                             q
                                                                                             (GHC.Types.[]
                                                                                                @ PropBDD.Prop)))) -}
ef72142bd1490ab9f83b835be369a465
  implies :: PropBDD.Prop -> PropBDD.Prop -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (p :: PropBDD.Prop) (q :: PropBDD.Prop) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.implies} True True} let {
                                                                                          p1 :: PropBDD.Prop
                                                                                          = {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.impl} True True} PropBDD.disj
                                                                                                                                                                  (GHC.Types.:
                                                                                                                                                                     @ PropBDD.Prop
                                                                                                                                                                     (PropBDD.neg
                                                                                                                                                                        p)
                                                                                                                                                                     (GHC.Types.:
                                                                                                                                                                        @ PropBDD.Prop
                                                                                                                                                                        q
                                                                                                                                                                        (GHC.Types.[]
                                                                                                                                                                           @ PropBDD.Prop)))
                                                                                        } in
                                                                                        {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.tautology} True True} Cudd.Cudd.$fEqDDNode2
                                                                                                                                                                   p1
                                                                                                                                                                     `cast`
                                                                                                                                                                   (Cudd.Cudd.N:DDNode[0])
                                                                                                                                                                   PropBDD.tt
                                                                                                                                                                     `cast`
                                                                                                                                                                   (Cudd.Cudd.N:DDNode[0])) -}
696119ea92db4ac53c0d620dacb780f0
  manager :: Cudd.Cudd.DDManager
  {- Unfolding: InlineRule (0, True, True)
                PropBDD.tt1 `cast` (Sym (Cudd.Cudd.N:DDManager[0])) -}
193054e289096e5cab23fd6d0c8ed0f9
  mkUniverse :: [GHC.Base.String] -> PropBDD.Universe
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (xs :: [GHC.Base.String]) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.mkUniverse} True True} PropBDD.mkUniverse_go
                                                                                             xs
                                                                                             PropBDD.mkUniverse1) -}
4fd27cc6a7c6e120b58ab40aaa9bcbbb
  mkUniverse1 :: [GHC.Types.Int]
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.mkUniverse} False True} GHC.Enum.eftInt
                                                                                              0#
                                                                                              9223372036854775807#) -}
34bebeccd95a15a0e4978f36d10acca7
  mkUniverse_$sgo ::
    [GHC.Types.Int]
    -> [GHC.Types.Char] -> [[GHC.Types.Char]] -> [Cudd.Cudd.DDNode]
  {- Arity: 3, Strictness: <L,1*U><L,U><L,U> -}
d83ce82f818678e1a68f315e68ea9ec1
  mkUniverse_go ::
    [[GHC.Types.Char]] -> [GHC.Types.Int] -> [Cudd.Cudd.DDNode]
  {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
dfc7f7bf5b1551455887b6e843b9ff55
  neg :: Cudd.Cudd.DDNode -> Cudd.Cudd.DDNode
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.neg} True True} Cudd.Cudd.bNot
                                                                                      PropBDD.tt1
                                                                                        `cast`
                                                                                      (Sym (Cudd.Cudd.N:DDManager[0]))) -}
bbb9cadbb38cdadbf1301321c9f74075
  queryOrUpdate ::
    PropBDD.Universe
    -> GHC.Base.String -> (PropBDD.Universe, PropBDD.Prop)
  {- Arity: 2, Strictness: <S,1*U><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: [PropBDD.Prop]) (s :: GHC.Base.String) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.queryOrUpdate} True True} case ds of wild {
                                                                                                []
                                                                                                -> let {
                                                                                                     u' :: PropBDD.Universe
                                                                                                     = {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.queryOrUpdate.u'} True True} PropBDD.mkUniverse
                                                                                                                                                                                         (GHC.Types.:
                                                                                                                                                                                            @ GHC.Base.String
                                                                                                                                                                                            s
                                                                                                                                                                                            (GHC.Types.[]
                                                                                                                                                                                               @ GHC.Base.String))
                                                                                                   } in
                                                                                                   (u',
                                                                                                    {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.queryOrUpdate.p} True True} GHC.List.head
                                                                                                                                                                                     @ PropBDD.Prop
                                                                                                                                                                                     u')
                                                                                                : ipv ipv1
                                                                                                -> PropBDD.queryOrUpdate1 }) -}
aff10e0a043daa7eef58ccd2fcc718c0
  queryOrUpdate1 :: (PropBDD.Universe, PropBDD.Prop)
  {- Strictness: x -}
bb374afbb172c45aab064a503fd21255
  sat :: PropBDD.Prop -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: PropBDD.Prop) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.sat} True True} Cudd.Cudd.$fEqDDNode1
                                                                                      p `cast`
                                                                                      (Cudd.Cudd.N:DDNode[0])
                                                                                      PropBDD.ff
                                                                                        `cast`
                                                                                      (Cudd.Cudd.N:DDNode[0])) -}
b25b4f780d62b3cd58ba54fdbdfe8a3e
  tautology :: PropBDD.Prop -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: PropBDD.Prop) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.tautology} True True} Cudd.Cudd.$fEqDDNode2
                                                                                            p `cast`
                                                                                            (Cudd.Cudd.N:DDNode[0])
                                                                                            PropBDD.tt
                                                                                              `cast`
                                                                                            (Cudd.Cudd.N:DDNode[0])) -}
11fc110d1f275d3e9b31a0109a661687
  tt :: Cudd.Cudd.DDNode
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.tt} True True} Cudd.Cudd.readOne
                                                                                     PropBDD.tt1
                                                                                       `cast`
                                                                                     (Sym (Cudd.Cudd.N:DDManager[0]))) -}
3512a9fd00229cf5ae1a26633fe1c94f
  tt1 :: GHC.Ptr.Ptr Cudd.C.CDDManager
  {- Unfolding: ({__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.manager} True False} Cudd.Cudd.cuddInit1) -}
f23643b6703677f9bff11a9f092873ff
  unsat :: PropBDD.Prop -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (p :: PropBDD.Prop) ->
                 {__scc {SPL-0.1.0.0-1gMIn6ueMVA5fHj2IG3fJG:PropBDD.unsat} True True} Cudd.Cudd.$fEqDDNode2
                                                                                        p `cast`
                                                                                        (Cudd.Cudd.N:DDNode[0])
                                                                                        PropBDD.ff
                                                                                          `cast`
                                                                                        (Cudd.Cudd.N:DDNode[0])) -}
"SC:go0" [ALWAYS] forall (sc :: [GHC.Types.Int])
                         (sc1 :: [GHC.Types.Char])
                         (sc2 :: [[GHC.Types.Char]])
  PropBDD.mkUniverse_go (GHC.Types.: @ GHC.Base.String sc1 sc2) sc
  = PropBDD.mkUniverse_$sgo sc sc1 sc2
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

