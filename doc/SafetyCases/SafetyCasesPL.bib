@phdthesis{Dardar_2014, title={Building a Safety Case in Compliance with ISO 26262 for Fuel LevelEstimation and Display System}, url={http://urn.kb.se/resolve?urn=urn:nbn:se:mdh:diva-24314}, abstractNote={Nowadays, road vehicles, including trucks, are characterized by an increasedcomplexity due to a greater variety of software, and a greater number of sensorsand actuators. As a consequence, there is an increased risk in termsof software or hardware failures that could lead to unacceptable hazards.Thus safety, more precisely functional safety, is a crucial property that mustbe ensured to avoid or mitigate these potential unacceptable hazards. Inthe automotive domain, recently (November 2011), the ISO-26262 safetystandard has been introduced to provide appropriate requirements and processes.More specically, the standard denes the system development processthat must be carried out to achieve a system that can be consideredacceptably safe. To be released on the market, systems must be certied,proofs that the systems are acceptably safe must be provided in terms of astructured argument, known as safety case, which inter-relates evidence andclaims. Certication authorities are in charge of evaluating the validity ofsuch safety cases. In the automotive domain, certication and compliancewith the standard ISO-26262 is becoming mandatory. By now, trucks donot have to be compliant with the standard. However, it is likely that by2016 they will have to. Scania is one of the leading companies in trucksdevelopment. To be ready by 2016, Scania is interested in investigatingISO-26262 as well as safety case provision. Thus this thesis focuses on theprovision of a safety case in the context of ISO-26262 for Fuel Level Estimationand Display System (FLEDS), which is one of the safety-criticalsystems in Scania.1}, author={Dardar, Raghad}, year={2014}}

 @phdthesis{Gallucci_2013, title={Building a safety case for a small sized product line of Fuel Level Display Systems}, url={http://urn.kb.se/resolve?urn=urn:nbn:se:mdh:diva-22373}, abstractNote={ISO 26262 is an international standard valid for the automotive domain. It regulates all the activities to perform for developing safety critical systems in such domain. To be compliant with ISO 26262, all the required activities have to be performed and all the required work products have to be provided. Furthermore, in addition to develop a system in a safe way, following the safety standard guidelines, the achieved safety has also to be demonstrated. This is done through a safety case, a structured argument showing that a system is acceptably safe.ISO 26262 focuses on single systems and does not contain guidelines for product lines. Product line engineering is a valid approach to systematize reuse, aimed at reducing the effort needed to develop similar systems. But, it loses its strength when dealing with safety critical systems, since it is not aligned with safety standards. Hence, when developing a safety critical product line in the automotive domain, the work products required by ISO 26262 have to be provided every time from scratch, including the safety case, for each single system of the product line.This thesis work focuses on providing an approach for building and modeling a safety case for safety critical product lines in the automotive domain. Furthermore, the considered product line engineering approach is aligned with ISO 26262, through the inclusion of safety activities in the product line development process. Giving in this way, the concrete possibility to overtake to the current limitations, reducing the effort needed to develop and certificate each single system of a safety critical product line. To illustrate the validity of the proposed approach a safety critical product line developed by Scania is used as case study.}, author={Gallucci, Antonio}, year={2013}}

@MISC{SACM,
  author = {OMG},
  title = {Structured {A}ssurance {C}ase {M}etamodel ({SACM}) - Version 1.1},
  note = {\href{http://www.omg.org/spec/SACM/1.1/PDF/}{http://www.omg.org/spec/SACM/1.1/PDF}}
}

@inproceedings{Schaefer,
 author = {Schaefer, Ina and Bettini, Lorenzo and Damiani, Ferruccio and Tanzarella, Nico},
 title = {Delta-oriented Programming of Software Product Lines},
 booktitle = {Proceedings of the 14th International Conference on Software Product Lines: Going Beyond},
 series = {SPLC'10},
 year = {2010},
 isbn = {3-642-15578-2, 978-3-642-15578-9},
 location = {Jeju Island, South Korea},
 pages = {77--91},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1885639.1885647},
 acmid = {1885647},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{Thum,
 author = {Th\"{u}m, Thomas and Apel, Sven and K\"{a}stner, Christian and Schaefer, Ina and Saake, Gunter},
 title = {A Classification and Survey of Analysis Strategies for Software Product Lines},
 journal = {ACM Comput. Surv.},
 issue_date = {July 2014},
 volume = {47},
 number = {1},
 month = jun,
 year = {2014},
 issn = {0360-0300},
 pages = {6:1--6:45},
 articleno = {6},
 numpages = {45},
 url = {http://doi.acm.org/10.1145/2580950},
 doi = {10.1145/2580950},
 acmid = {2580950},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Product-line analysis, model checking, program family, software analysis, software product line, static analysis, theorem proving, type checking},
} 

@Inbook{Prehofer1997,
author="Prehofer, Christian",
editor="Ak{\c{s}}it, Mehmet
and Matsuoka, Satoshi",
title="Feature-oriented programming: A fresh look at objects",
bookTitle="ECOOP'97 --- Object-Oriented Programming: 11th European Conference Jyv{\"a}skyl{\"a}, Finland, June 9--13, 1997 Proceedings",
year="1997",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="419--443",
abstract="We propose a new model for flexible composition of objects from a set of features. Features are similar to (abstract) subclasses, but only provide the core functionality of a (sub)class. Overwriting other methods is viewed as resolving feature interactions and is specified separately for two features at a time. This programming model allows to compose features (almost) freely in a way which generalizes inheritance and aggregation. For a set of n features, an exponential number of different feature combinations is possible, assuming a quadratic number of interaction resolutions. We present the feature model as an extension of Java and give two translations to Java, one via inheritance and the other via aggregation. We further discuss parameterized features, which work nicely with our feature model and can be translated into Pizza, an extension of Java.",
isbn="978-3-540-69127-3",
doi="10.1007/BFb0053389",
url="https://doi.org/10.1007/BFb0053389"
}

@Inbook{Kiczales1997,
author="Kiczales, Gregor
and Lamping, John
and Mendhekar, Anurag
and Maeda, Chris
and Lopes, Cristina
and Loingtier, Jean-Marc
and Irwin, John",
editor="Ak{\c{s}}it, Mehmet
and Matsuoka, Satoshi",
title="Aspect-oriented programming",
bookTitle="ECOOP'97 --- Object-Oriented Programming: 11th European Conference Jyv{\"a}skyl{\"a}, Finland, June 9--13, 1997 Proceedings",
year="1997",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="220--242",
abstract="We have found many programming problems for which neither procedural nor object-oriented programming techniques are sufficient to clearly capture some of the important design decisions the program must implement. This forces the implementation of those design decisions to be scattered throughout the code, resulting in ``tangled'' code that is excessively difficult to develop and maintain. We present an analysis of why certain design decisions have been so difficult to clearly capture in actual code. We call the properties these decisions address aspects, and show that the reason they have been hard to capture is that they cross-cut the system's basic functionality. We present the basis for a new programming technique, called aspect-oriented programming, that makes it possible to clearly express programs involving such aspects, including appropriate isolation, composition and reuse of the aspect code. The discussion is rooted in systems we have built using aspect-oriented programming.",
isbn="978-3-540-69127-3",
doi="10.1007/BFb0053381",
url="https://doi.org/10.1007/BFb0053381"
}

@INPROCEEDINGS{Kelly,
    author = {Tim Kelly and Rob Weaver},
    title = {The Goal Structuring Notation ? A Safety Argument Notation},
    booktitle = {Proc. of Dependable Systems and Networks 2004 Workshop on Assurance Cases},
    year = {2004}
}

