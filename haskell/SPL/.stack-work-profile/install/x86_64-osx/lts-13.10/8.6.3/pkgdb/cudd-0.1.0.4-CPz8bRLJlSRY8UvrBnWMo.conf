name: cudd
version: 0.1.0.4
id: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo
key: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo
license: BSD-3-Clause
copyright: 2016 Adam Walker
maintainer: adamwalker10@gmail.com
author: Adam Walker
homepage: https://github.com/adamwalker/haskell_cudd
synopsis: Bindings to the CUDD binary decision diagrams library
description:
    Bindings to version 3.0.0 of the CUDD binary decision diagrams library.
    .
    <http://vlsi.colorado.edu/~fabio/CUDD/>
    .
    /Installation/
    .
    Either install CUDD 3.0.0 using your system's package manager or download and install CUDD from here: <http://vlsi.colorado.edu/~fabio/>.
    .
    Then:
    .
    "cabal install cudd"
    .
    Depending on where CUDD is installed on your system, you may need to provide --extra-lib-dirs or --extra-include-dirs:
    .
    "cabal install cudd --extra-lib-dirs=\/usr\/local\/lib"
    .
    /Usage/
    .
    This package provides two interfaces to the CUDD library:
    .
    * A purely functional one in "Cudd.Cudd" that automatically dereferences BDDs during garbage collection.
    .
    * An ST Monad based one in "Cudd.Imperative" that gives you precise control over the ordering of BDD operations and when BDDs are dereferenced. Use this one if you want your code to perform well.
    .
    Also, for a higher level interface in the style of the <https://hackage.haskell.org/package/ersatz ersatz> SAT encoder, see <https://github.com/jwaldmann/cudd-ersatz/>.
category: Data
abi: d8991b51e0a9facd91abdde272caffe4
exposed: True
exposed-modules:
    Cudd.C Cudd.Common Cudd.Convert Cudd.Cudd Cudd.File Cudd.GC
    Cudd.Hook Cudd.Imperative Cudd.MTR Cudd.Reorder
hidden-modules: Cudd.ForeignHelpers
import-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3/cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo
library-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3/cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo
dynamic-library-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3
data-dir: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/share/x86_64-osx-ghc-8.6.3/cudd-0.1.0.4
hs-libraries: HScudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo
extra-libraries:
    cudd m
depends:
    array-0.5.3.0-G9jUVjRAtDbD1j9Dj5Nu9D base-4.12.0.0
    mtl-2.2.2-LXWjc55n1YI0yZEXaVCrK
    transformers-0.5.5.0-GpzxZgWw8hw9Sypj2RiUUU
haddock-interfaces: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/doc/cudd-0.1.0.4/cudd.haddock
haddock-html: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/doc/cudd-0.1.0.4
