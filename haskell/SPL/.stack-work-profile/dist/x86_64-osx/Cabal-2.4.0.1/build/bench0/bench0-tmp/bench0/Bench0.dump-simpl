
==================== Tidy Core ====================
2019-03-10 04:20:06.552697 UTC

Result size of Tidy Core
  = {terms: 538, types: 667, coercions: 70, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(lvl{v r42x} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
(lvl{v r42x} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "bench0/Bench0.hs:9:1-51|{bench0/Bench0.hs:9:1-17}\n\
    \                        univ{v a1OO}@[{bench0/Bench0.hs:9:7}\n\
    \                                      (((p{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})\n\
    \                                          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})),\n\
    \                                      {bench0/Bench0.hs:9:10}\n\
    \                                      (((q{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})\n\
    \                                          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})),\n\
    \                                      {bench0/Bench0.hs:9:13}\n\
    \                                      (((r{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})\n\
    \                                          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})),\n\
    \                                      {bench0/Bench0.hs:9:16}\n\
    \                                      (((s{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})\n\
    \                                          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))]"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.p13{v r1D} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p13{v r1D} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "P"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.p12{v r1y} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 ghc-prim:GHC.Types.Char{(w) tc 3g})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       ghc-prim:GHC.Types.Char{(w) tc 3g}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p12{v r1y} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 ghc-prim:GHC.Types.Char{(w) tc 3g})
  = (ghc-prim:GHC.CString.unpackCString#{v 0k} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             ghc-prim:GHC.Types.Char{(w) tc 3g})
      (main:Main.p13{v r1D} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.p11{v r1C} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p11{v r1C} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "Q"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.p10{v r1B} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 ghc-prim:GHC.Types.Char{(w) tc 3g})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       ghc-prim:GHC.Types.Char{(w) tc 3g}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p10{v r1B} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 ghc-prim:GHC.Types.Char{(w) tc 3g})
  = (ghc-prim:GHC.CString.unpackCString#{v 0k} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             ghc-prim:GHC.Types.Char{(w) tc 3g})
      (main:Main.p11{v r1C} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.p9{v r1J} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p9{v r1J} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "R"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.p8{v r1F} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                ghc-prim:GHC.Types.Char{(w) tc 3g})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       ghc-prim:GHC.Types.Char{(w) tc 3g}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p8{v r1F} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                ghc-prim:GHC.Types.Char{(w) tc 3g})
  = (ghc-prim:GHC.CString.unpackCString#{v 0k} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             ghc-prim:GHC.Types.Char{(w) tc 3g})
      (main:Main.p9{v r1J} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.p7{v r1I} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p7{v r1I} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "S"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.p6{v r1H} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                ghc-prim:GHC.Types.Char{(w) tc 3g})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       ghc-prim:GHC.Types.Char{(w) tc 3g}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.p6{v r1H} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                ghc-prim:GHC.Types.Char{(w) tc 3g})
  = (ghc-prim:GHC.CString.unpackCString#{v 0k} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             ghc-prim:GHC.Types.Char{(w) tc 3g})
      (main:Main.p7{v r1I} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.p5{v r1G} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                base:GHC.Base.String{tc r1a})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M} base:GHC.Base.String{tc r1a}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.p5{v r1G} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                base:GHC.Base.String{tc r1a})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ base:GHC.Base.String{tc r1a}
      (main:Main.p6{v r1H} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      ghc-prim:GHC.Types.Char{(w) tc 3g})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ base:GHC.Base.String{tc r1a})

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
(main:Main.p4{v r1E} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                base:GHC.Base.String{tc r1a})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M} base:GHC.Base.String{tc r1a}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.p4{v r1E} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                base:GHC.Base.String{tc r1a})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ base:GHC.Base.String{tc r1a}
      (main:Main.p8{v r1F} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      ghc-prim:GHC.Types.Char{(w) tc 3g})
      (main:Main.p5{v r1G} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      base:GHC.Base.String{tc r1a})

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
(main:Main.p3{v r1z} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                base:GHC.Base.String{tc r1a})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M} base:GHC.Base.String{tc r1a}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.p3{v r1z} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                base:GHC.Base.String{tc r1a})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ base:GHC.Base.String{tc r1a}
      (main:Main.p10{v r1B} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       ghc-prim:GHC.Types.Char{(w) tc 3g})
      (main:Main.p4{v r1E} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      base:GHC.Base.String{tc r1a})

-- RHS size: {terms: 2, types: 8, coercions: 0, joins: 0/0}
(main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
       (ghc-prim:GHC.Types.[]{(w) tc 3M}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId, Str=x]
(main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (base:Control.Exception.Base.patError{(w) v 0e} [gid] :: forall @(q{tv 1h} [tv] :: ghc-prim:GHC.Types.RuntimeRep{(w) tc 334})
                                                                    @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                         (q{tv 1h} [tv] :: ghc-prim:GHC.Types.RuntimeRep{(w) tc 334})).
                                                               ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                               -> (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      (q{tv 1h} [tv] :: ghc-prim:GHC.Types.RuntimeRep{(w) tc 334})))
      @ 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
      @ (ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
           (ghc-prim:GHC.Types.[]{(w) tc 3M}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (lvl{v r42x} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 34, types: 31, coercions: 0, joins: 0/0}
(main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
       (ghc-prim:GHC.Types.[]{(w) tc 3M}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 150 60}]
(main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = case scctick<(...)>
         scctick<mkUniverse>
         (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.mkUniverse_$sgo2{v r1w} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                        ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                      -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                           ghc-prim:GHC.Types.Char{(w) tc 3g}
                                                                                         -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                              (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                 ghc-prim:GHC.Types.Char{(w) tc 3g})
                                                                                            -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
           (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.mkUniverse1{v r1x} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                     ghc-prim:GHC.Types.Int{(w) tc 3u})
           (main:Main.p12{v r1y} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            ghc-prim:GHC.Types.Char{(w) tc 3g})
           (main:Main.p3{v r1z} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                           base:GHC.Base.String{tc r1a}) return ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                                                  (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
    of ((wild{v XB} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
          Unf=OtherCon []) {
      ghc-prim:GHC.Types.[]{(w) d 6x} ->
        (main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                        (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL});
      ghc-prim:GHC.Types.:{(w) d 66} ((p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                        :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                     ((ds{v d2qJ} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                        :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                             SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) ->
        case (ds{v d2qJ} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) return ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                                                                     (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
        of ((wild1{v X5} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
              :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
              Unf=OtherCon []) {
          ghc-prim:GHC.Types.[]{(w) d 6x} ->
            (main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL});
          ghc-prim:GHC.Types.:{(w) d 66} ((q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                            :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                         ((ds1{v d2qK} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                            :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) ->
            case (ds1{v d2qK} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) return ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                                                                          (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                             SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                                                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
            of ((wild2{v X8} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
                  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                  Unf=OtherCon []) {
              ghc-prim:GHC.Types.[]{(w) d 6x} ->
                (main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL});
              ghc-prim:GHC.Types.:{(w) d 66} ((r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                             ((ds2{v d2qL} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) ->
                case (ds2{v d2qL} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                             SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) return ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                                                                              (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                                                                              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                of ((wild3{v Xb} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
                      :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                      Unf=OtherCon []) {
                  ghc-prim:GHC.Types.[]{(w) d 6x} ->
                    (main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                    (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL});
                  ghc-prim:GHC.Types.:{(w) d 66} ((s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                    :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                 ((ds3{v d2qM} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                    :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) ->
                    case (ds3{v d2qM} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) return ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                                                                                  (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                    of ((wild4{v Xe} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
                          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                          Unf=OtherCon []) {
                      ghc-prim:GHC.Types.[]{(w) d 6x} ->
                        ((wild{v XB} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
                         (p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
                         (q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
                         (r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
                         (s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}));
                      ghc-prim:GHC.Types.:{(w) d 66} ((ipv{v s2G2} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                        :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                     ((ipv1{v s2G3} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                        :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) ->
                        (main:Main.p2{v r1A} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                                        (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                    }
                }
            }
        }
    }

-- RHS size: {terms: 4, types: 13, coercions: 0, joins: 0/0}
(main:Main.univ{v rl} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 0}]
(main:Main.univ{v rl} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<univ>
    case (main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                         (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    return ghc-prim:GHC.Types.[]{(w) tc 3M}
             SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
    of ((ds{v X2qo} [lid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
          :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
          Unf=OtherCon [])
    { (((univ1{v a1OO} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})) ->
    (univ1{v a1OO} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    }

-- RHS size: {terms: 4, types: 13, coercions: 0, joins: 0/0}
(main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 0}]
(main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<p>
    case (main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                         (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    return SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
    of ((ds{v X2qp} [lid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
          :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
          Unf=OtherCon [])
    { (((univ1{v a1OO} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})) ->
    (p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._p1{v rG} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._p1{v rG} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  = scctick<_p>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.impl1{v rK} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
                                                                     -> base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                                                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
      (main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 1, types: 0, coercions: 2, joins: 0/0}
(main:Main._p{v r1} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main._p1{v rG} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                               cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
               `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                               cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                            cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})}]
(main:Main._p{v r1} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  = (main:Main._p1{v rG} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
    `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.z3{v r2z} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.z3{v r2z} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      6#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.z2{v r2y} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.z2{v r2y} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.z3{v r2z} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.z1{v r2x} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.z1{v r2x} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<z>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.z2{v r2y} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              ghc-prim:GHC.Types.Int{(w) tc 3u}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.z{v rv} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.z1{v r2x} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                  ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.z{v rv} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.z1{v r2x} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 4, types: 13, coercions: 0, joins: 0/0}
(main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 0}]
(main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<q>
    case (main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                         (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    return SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
    of ((ds{v X2qs} [lid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
          :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
          Unf=OtherCon [])
    { (((univ1{v a1OO} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})) ->
    (q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    }

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main._pq2{v rT} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main._pq2{v rT} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      (main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
(main:Main.pq1{v r1Q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.pq1{v r1Q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      (main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main._pq2{v rT} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.pq{v rh} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main.pq{v rh} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<pq>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.conj{v rM} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                    -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.pq1{v r1Q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.p_q3{v r1M} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main.p_q3{v r1M} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  = scc<p_q>
    scc<p_q>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.impl1{v rK} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
                                                                     -> base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                                                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
      (main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 3, types: 2, coercions: 2, joins: 0/0}
(main:Main.p_q2{v r1L} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.p_q2{v r1L} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      ((main:Main.p_q3{v r1M} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                         cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
       `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
               :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
(main:Main.p_q1{v r1K} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.p_q1{v r1K} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      (main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.p_q2{v r1L} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.p_q{v re} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main.p_q{v re} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<p_q>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.conj{v rM} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                    -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.p_q1{v r1K} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._pq3{v rS} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._pq3{v rS} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  = scc<_pq>
    scc<_pq>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.impl1{v rK} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
                                                                     -> base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                                                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
      (main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 3, types: 1, coercions: 2, joins: 0/0}
(main:Main._pq1{v rR} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main._pq1{v rR} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      ((main:Main._pq3{v rS} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                        cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
       `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
               :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
      (main:Main._pq2{v rT} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._pq{v r3} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._pq{v r3} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<_pq>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.conj{v rM} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                    -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main._pq1{v rR} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.y6{v r2w} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.y6{v r2w} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = -11

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.y5{v r2v} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.y5{v r2v} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.y6{v r2w} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}),
     (main:Main._pq{v r3} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.y4{v r2s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          integer-gmp:GHC.Integer.Type.Integer{tc 3I}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.y4{v r2s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<y0>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           integer-gmp:GHC.Integer.Type.Integer{tc 3I}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.y5{v r2v} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              integer-gmp:GHC.Integer.Type.Integer{tc 3I}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.y0{v ru} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.y4{v r2s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                  integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <integer-gmp:GHC.Integer.Type.Integer{tc 3I}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I}))}]
(main:Main.y0{v ru} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = (main:Main.y4{v r2s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <integer-gmp:GHC.Integer.Type.Integer{tc 3I}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    integer-gmp:GHC.Integer.Type.Integer{tc 3I}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._p_q4{v rO} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._p_q4{v rO} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  = scc<_p_q>
    scc<_p_q>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.impl1{v rK} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
                                                                     -> base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                                                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
      (main:Main.p{v rd} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._p_q3{v rQ} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._p_q3{v rQ} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  = scc<_p_q>
    scc<_p_q>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.impl1{v rK} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
                                                                     -> base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                                                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
      (main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 3, types: 2, coercions: 2, joins: 0/0}
(main:Main._p_q2{v rP} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main._p_q2{v rP} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      ((main:Main._p_q3{v rQ} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                         cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
       `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
               :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 3, types: 1, coercions: 2, joins: 0/0}
(main:Main._p_q1{v rN} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main._p_q1{v rN} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
      ((main:Main._p_q4{v rO} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                         cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
       `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
               :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
      (main:Main._p_q2{v rP} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._p_q{v r2} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._p_q{v r2} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<_p_q>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.conj{v rM} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                                                    -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main._p_q1{v rN} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.v11{v r1T} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.v11{v r1T} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      1#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.v13{v r1W} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v13{v r1W} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.v11{v r1T} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.pq{v rh} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.v9{v r1V} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.v9{v r1V} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      2#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.v12{v r1U} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v12{v r1U} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.v9{v r1V} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.p_q{v re} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.v10{v r1S} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v10{v r1S} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.v11{v r1T} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._pq{v r3} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.v8{v r24} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v8{v r24} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.v9{v r1V} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._p_q{v r2} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.v7{v r23} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v7{v r23} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v8{v r24} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              ghc-prim:GHC.Types.Int{(w) tc 3u}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.v6{v r22} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v6{v r22} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v10{v r1S} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.v7{v r23} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.v5{v r21} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v5{v r21} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v12{v r1U} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.v6{v r22} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.v4{v r1R} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.v4{v r1R} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<v1>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v13{v r1W} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.v5{v r21} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.v1{v rm} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.v4{v r1R} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                  ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.v1{v rm} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.v4{v r1R} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.w7{v r2b} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.w7{v r2b} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      12#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.w6{v r26} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.w6{v r26} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.w7{v r2b} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.pq{v rh} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.w5{v r2a} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.w5{v r2a} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      3#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.w4{v r29} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.w4{v r29} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.w5{v r2a} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._p_q{v r2} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.w3{v r28} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.w3{v r28} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.w4{v r29} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              ghc-prim:GHC.Types.Int{(w) tc 3u}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.w2{v r27} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.w2{v r27} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v12{v r1U} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.w3{v r28} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.w1{v r25} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.w1{v r25} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<w>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.w6{v r26} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.w2{v r27} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.w{v ro} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.w1{v r25} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                  ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.w{v ro} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.w1{v r25} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.x13{v r2g} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.x13{v r2g} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = -8

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.x12{v r2f} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x12{v r2f} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.x13{v r2g} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}),
     (main:Main._pq{v r3} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.x11{v r2e} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.x11{v r2e} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = 0

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.x10{v r2d} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x10{v r2d} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.x11{v r2e} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}),
     (main:Main._p_q{v r2} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.x9{v r2n} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.x9{v r2n} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = -3

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.x8{v r2j} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x8{v r2j} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.x9{v r2n} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}),
     (main:Main.p_q{v re} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.x7{v r2m} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.x7{v r2m} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = 7

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.x6{v r2l} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x6{v r2l} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.x7{v r2m} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}),
     (main:Main.pq{v rh} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.x5{v r2k} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          integer-gmp:GHC.Integer.Type.Integer{tc 3I}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x5{v r2k} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           integer-gmp:GHC.Integer.Type.Integer{tc 3I}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.x6{v r2l} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              integer-gmp:GHC.Integer.Type.Integer{tc 3I}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.x4{v r2i} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          integer-gmp:GHC.Integer.Type.Integer{tc 3I}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x4{v r2i} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           integer-gmp:GHC.Integer.Type.Integer{tc 3I}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.x8{v r2j} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.x5{v r2k} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.x3{v r2h} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          integer-gmp:GHC.Integer.Type.Integer{tc 3I}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.x3{v r2h} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           integer-gmp:GHC.Integer.Type.Integer{tc 3I}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.x10{v r2d} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.x4{v r2i} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.x2{v r2c} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          integer-gmp:GHC.Integer.Type.Integer{tc 3I}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.x2{v r2c} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<x0>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           integer-gmp:GHC.Integer.Type.Integer{tc 3I}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.x12{v r2f} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.x3{v r2h} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.x0{v rq} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.x2{v r2c} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                  integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <integer-gmp:GHC.Integer.Type.Integer{tc 3I}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I}))}]
(main:Main.x0{v rq} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = (main:Main.x2{v r2c} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <integer-gmp:GHC.Integer.Type.Integer{tc 3I}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    integer-gmp:GHC.Integer.Type.Integer{tc 3I}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main._q1{v rU} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 20 0}]
(main:Main._q1{v rU} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
  = scctick<_q>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.impl1{v rK} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
                                                                     -> base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                                                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
      (main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})

-- RHS size: {terms: 1, types: 0, coercions: 2, joins: 0/0}
(main:Main._q{v r4} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main._q1{v rU} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                               cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
               `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                               cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                            cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})}]
(main:Main._q{v r4} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  = (main:Main._q1{v rU} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
    `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                    cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.v17{v r1Y} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v17{v r1Y} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.v11{v r1T} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.q{v ri} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 2, coercions: 2, joins: 0/0}
(main:Main.v16{v r20} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v16{v r20} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                 ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  = ((main:Main.v9{v r1V} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._q1{v rU} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                     cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
     `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
             :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                  (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                  (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                  (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                     cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.v15{v r1Z} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.v15{v r1Z} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v16{v r20} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              ghc-prim:GHC.Types.Int{(w) tc 3u}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.v14{v r1X} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.v14{v r1X} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                 (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<v2>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.v17{v r1Y} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.v15{v r1Z} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.v2{v rn} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.v14{v r1X} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.v2{v rn} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.v14{v r1X} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                     (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                        ghc-prim:GHC.Types.Int{(w) tc 3u}
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 4, types: 13, coercions: 0, joins: 0/0}
(main:Main.r{v rj} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 0}]
(main:Main.r{v rj} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<r>
    case (main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                         (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    return SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
    of ((ds{v X2qD} [lid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
          :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
          Unf=OtherCon [])
    { (((univ1{v a1OO} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})) ->
    (r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    }

-- RHS size: {terms: 4, types: 13, coercions: 0, joins: 0/0}
(main:Main.s{v rk} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 0}]
(main:Main.s{v rk} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = scctick<s>
    case (main:Main.p1{v r1v} [gid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                                         (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    return SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
    of ((ds{v X2qE} [lid] :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
                               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
                               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}) [Occ=Dead]
          :: ghc-prim:GHC.Tuple.(,,,,){(w) tc 4a}
               (ghc-prim:GHC.Types.[]{(w) tc 3M}
                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
          Unf=OtherCon [])
    { (((univ1{v a1OO} [lid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: ghc-prim:GHC.Types.[]{(w) tc 3M}
               SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((p14{v a1OH} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((q1{v a1OI} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((r1{v a1OJ} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}),
       ((s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
          :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})) ->
    (s1{v a1OK} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
    }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.main5{v r1l} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.main5{v r1l} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      7#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.main4{v r1r} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main4{v r1r} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  = ((main:Main.main5{v r1l} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
(main:Main.main3{v r1q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
          ghc-prim:GHC.Types.Int{(w) tc 3u})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.main3{v r1q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}))
  = tick<x1>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
           ghc-prim:GHC.Types.Int{(w) tc 3u})
      (main:Main.main4{v r1r} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
              ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.x1{v rr} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.main3{v r1q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                  (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                     ghc-prim:GHC.Types.Int{(w) tc 3u}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.x1{v rr} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.main3{v r1q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.xs2{v r2p} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.xs2{v r2p} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = 1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.xs1{v r2q} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
(main:Main.xs1{v r2q} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = 5

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
(main:Main.xs{v rs} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
(main:Main.xs{v rs} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = scctick<xs>
    (base:GHC.Enum.enumDeltaToInteger1{v r2o} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                       -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                          -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                               integer-gmp:GHC.Integer.Type.Integer{tc 3I})
      (main:Main.xs2{v r2p} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})
      (main:Main.xs1{v r2q} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.plus'3{v r1P} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                  -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                     -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
     -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
        -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 0 60}]
(main:Main.plus'3{v r1P} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                  -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                     -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})
  = scc<plus'>
    scc<plus'>
    (integer-gmp:GHC.Integer.Type.plusInteger{v 014} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                              -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                                 -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
(main:Main.plus'2{v r1O} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                     -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                         -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
        -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
            -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.plus'2{v r1O} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                     -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                         -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  = ((main:Main.plus'3{v r1P} [gid] :: integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                          -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}),
     (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 8, coercions: 0, joins: 0/0}
(main:Main.plus'1{v r1N} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                       (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                        -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                            -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
          (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
           -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
               -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})))
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.plus'1{v r1N} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                       (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                        -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                            -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))
  = tick<plus'>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
           (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
            -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})))
      (main:Main.plus'2{v r1O} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                           -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                               -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
              (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
               -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                   -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
(main:Main.plus'{v rg} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                  (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})))
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
        -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
            -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.plus'1{v r1N} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                   (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                      (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                       -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                           -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                 -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                 -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                    -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))}]
(main:Main.plus'{v rg} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                  (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                   -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                       -> integer-gmp:GHC.Integer.Type.Integer{tc 3I})))
  = (main:Main.plus'1{v r1N} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                        (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                           (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                            -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                                                -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                      -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                      -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                        -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                            -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                     -> (integer-gmp:GHC.Integer.Type.Integer{tc 3I}
                         -> integer-gmp:GHC.Integer.Type.Integer{tc 3I}))))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.$trModule4{v rC} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.$trModule4{v rC} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.$trModule3{v ry} [gid] :: ghc-prim:GHC.Types.TrName{tc 628})
  :: ghc-prim:GHC.Types.TrName{tc 628}
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.$trModule3{v ry} [gid] :: ghc-prim:GHC.Types.TrName{tc 628})
  = (ghc-prim:GHC.Types.TrNameS{v rA} [gid[DataCon]] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                        -> ghc-prim:GHC.Types.TrName{tc 628})
      (main:Main.$trModule4{v rC} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.$trModule2{v rB} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
(main:Main.$trModule2{v rB} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})
  = "Main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.$trModule1{v rz} [gid] :: ghc-prim:GHC.Types.TrName{tc 628})
  :: ghc-prim:GHC.Types.TrName{tc 628}
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.$trModule1{v rz} [gid] :: ghc-prim:GHC.Types.TrName{tc 628})
  = (ghc-prim:GHC.Types.TrNameS{v rA} [gid[DataCon]] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32}
                                                        -> ghc-prim:GHC.Types.TrName{tc 628})
      (main:Main.$trModule2{v rB} [gid] :: ghc-prim:GHC.Prim.Addr#{(w) tc 32})

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
(main:Main.$trModule{v rw} [gid] :: ghc-prim:GHC.Types.Module{tc 622})
  :: ghc-prim:GHC.Types.Module{tc 622}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.$trModule{v rw} [gid] :: ghc-prim:GHC.Types.Module{tc 622})
  = (ghc-prim:GHC.Types.Module{v rx} [gid[DataCon]] :: ghc-prim:GHC.Types.TrName{tc 628}
                                                       -> ghc-prim:GHC.Types.TrName{tc 628}
                                                          -> ghc-prim:GHC.Types.Module{tc 622})
      (main:Main.$trModule3{v ry} [gid] :: ghc-prim:GHC.Types.TrName{tc 628})
      (main:Main.$trModule1{v rz} [gid] :: ghc-prim:GHC.Types.TrName{tc 628})

-- RHS size: {terms: 5, types: 2, coercions: 0, joins: 0/0}
(main:Main.baz''{v r9} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 50 60}]
(main:Main.baz''{v r9} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = tick<baz''>
    \ ((x14{v a1ct} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      ((y7{v a1cu} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
      scc<baz''>
      scctick<baz''.\>
      (base:GHC.Num.$fNumInt_$c+{v r13} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
        (x14{v a1ct} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
        (y7{v a1cu} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.plus{v rf} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                               -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}) [InlPrag=NOINLINE]
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId]
(main:Main.plus{v rf} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                               -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = scctick<plus>
    (base:GHC.Num.$fNumInt_$c+{v r13} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                               -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u})

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
(main:Main.$wbar{v rD} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [InlPrag=NOINLINE]
  :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
     -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []]
(main:Main.$wbar{v rD} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
  = \ ((ww{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
         :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
      tick<bar>
      scc<bar>
      (ghc-prim:GHC.Prim.*#{(w) v 9a} [gid[PrimOp]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                          -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
        (ww{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) 3#

-- RHS size: {terms: 10, types: 4, coercions: 0, joins: 0/0}
(main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u}) [InlPrag=NOUSERINLINE[0]]
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ ((w8{v s47W} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Once!]
                    :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
                 case (w8{v s47W} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                 return ghc-prim:GHC.Types.Int{(w) tc 3u}
                 of ((ww{v s47Y} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
                       :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                       Unf=OtherCon [])
                 { ghc-prim:GHC.Types.I#{(w) d 6i} ((ww1{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [Occ=Once]
                                                      :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
                 case (main:Main.$wbar{v rD} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                      -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                        (ww1{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                 return ghc-prim:GHC.Types.Int{(w) tc 3u}
                 of ((ww2{v s483} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [Occ=Once]
                       :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                       Unf=OtherCon [])
                 { __DEFAULT ->
                 (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                   (ww2{v s483} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                 }
                 }}]
(main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = \ ((w8{v s47W} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
      case (w8{v s47W} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww{v s47Y} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
            :: ghc-prim:GHC.Types.Int{(w) tc 3u}
            Unf=OtherCon [])
      { ghc-prim:GHC.Types.I#{(w) d 6i} ((ww1{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                                           :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
      case (main:Main.$wbar{v rD} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                           -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
             (ww1{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww2{v s483} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
            :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
            Unf=OtherCon [])
      { __DEFAULT ->
      (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                         -> ghc-prim:GHC.Types.Int{(w) tc 3u})
        (ww2{v s483} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.bar'3{v r11} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 0 60}]
(main:Main.bar'3{v r11} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = scc<bar'>
    scc<bar'>
    (main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u})

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.bar'2{v rZ} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                  (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       (ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u})
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.bar'2{v rZ} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                  (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  = ((main:Main.bar'3{v r11} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.bar'1{v rW} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                     (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
          (ghc-prim:GHC.Types.Int{(w) tc 3u}
           -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.bar'1{v rW} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                  (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                     (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
  = tick<bar'>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
           (ghc-prim:GHC.Types.Int{(w) tc 3u}
            -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
      (main:Main.bar'2{v rZ} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                        (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
              (ghc-prim:GHC.Types.Int{(w) tc 3u}
               -> ghc-prim:GHC.Types.Int{(w) tc 3u})))

-- RHS size: {terms: 1, types: 0, coercions: 4, joins: 0/0}
(main:Main.bar'{v r6} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       (ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u})
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.bar'1{v rW} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                    (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                     -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> ghc-prim:GHC.Types.Int{(w) tc 3u})))}]
(main:Main.bar'{v r6} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
  = (main:Main.bar'1{v rW} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                      (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                         (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}
                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       (ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    (ghc-prim:GHC.Types.Int{(w) tc 3u}
                     -> ghc-prim:GHC.Types.Int{(w) tc 3u})))

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
(main:Main.$wfoo{v rE} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [InlPrag=NOINLINE]
  :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
     -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []]
(main:Main.$wfoo{v rE} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
  = \ ((ww{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
         :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
      tick<foo>
      scc<foo>
      (ghc-prim:GHC.Prim.+#{(w) v 98} [gid[PrimOp]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                          -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
        (ww{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) 2#

-- RHS size: {terms: 10, types: 4, coercions: 0, joins: 0/0}
(main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u}) [InlPrag=NOUSERINLINE[0]]
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ ((w8{v s485} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Once!]
                    :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
                 case (w8{v s485} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                 return ghc-prim:GHC.Types.Int{(w) tc 3u}
                 of ((ww{v s487} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
                       :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                       Unf=OtherCon [])
                 { ghc-prim:GHC.Types.I#{(w) d 6i} ((ww1{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [Occ=Once]
                                                      :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
                 case (main:Main.$wfoo{v rE} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                      -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                        (ww1{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                 return ghc-prim:GHC.Types.Int{(w) tc 3u}
                 of ((ww2{v s48c} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [Occ=Once]
                       :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                       Unf=OtherCon [])
                 { __DEFAULT ->
                 (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                   (ww2{v s48c} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                 }
                 }}]
(main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = \ ((w8{v s485} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
      case (w8{v s485} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww{v s487} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
            :: ghc-prim:GHC.Types.Int{(w) tc 3u}
            Unf=OtherCon [])
      { ghc-prim:GHC.Types.I#{(w) d 6i} ((ww1{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                                           :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
      case (main:Main.$wfoo{v rE} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                           -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
             (ww1{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww2{v s48c} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
            :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
            Unf=OtherCon [])
      { __DEFAULT ->
      (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                         -> ghc-prim:GHC.Types.Int{(w) tc 3u})
        (ww2{v s48c} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
      }
      }

-- RHS size: {terms: 7, types: 2, coercions: 0, joins: 0/0}
(baz'1{v r4b2} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                           -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId, Arity=2, Str=<L,1*U(U)><L,1*U(U)>, Unf=OtherCon []]
(baz'1{v r4b2} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                           -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = \ ((x14{v a1cr} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      ((y7{v a1cs} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
      (main:Main.plus{v rf} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                        -> ghc-prim:GHC.Types.Int{(w) tc 3u})
        ((main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
           (x14{v a1cr} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}))
        ((main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
           (y7{v a1cs} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
(baz'2{v r4b3} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                          (ghc-prim:GHC.Types.Int{(w) tc 3u}
                           -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                               -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       (ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
            -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
[GblId, Str=m, Unf=OtherCon []]
(baz'2{v r4b3} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                          (ghc-prim:GHC.Types.Int{(w) tc 3u}
                           -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                               -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                          cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  = ((baz'1{v r4b2} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                             -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 8, coercions: 0, joins: 0/0}
(baz'3{v r4b4} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                          (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                             (ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
          (ghc-prim:GHC.Types.Int{(w) tc 3u}
           -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
               -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
[GblId, Str=m2, Unf=OtherCon []]
(baz'3{v r4b4} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                          (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                             (ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
           (ghc-prim:GHC.Types.Int{(w) tc 3u}
            -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
      (baz'2{v r4b3} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                     -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
              (ghc-prim:GHC.Types.Int{(w) tc 3u}
               -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                   -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
(main:Main.baz'{v r8} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}))) [InlPrag=INLINE (sat-args=0)]
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       (ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
            -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
[GblId,
 Str=m2,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=False)
         Tmpl= ((base:GHC.Base.build{v 04} [gid] :: forall @(a{tv a2pT} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                      (forall @(b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                         ((a{tv a2pT} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                          -> ((b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                              -> (b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})))
                                                         -> (b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                            -> (b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                      -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                           (a{tv a2pT} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                  @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       (ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                            -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
                  (\ (@ (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                     ((c{v d2pR} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                            (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                             -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                                          -> (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                             -> (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})) [Occ=Once!,
                                                                                                                  OS=OneShot]
                        :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                             (ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                           -> (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                              -> (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                     ((n{v d2pS} [lid] :: (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})) [Occ=Once,
                                                                                                            OS=OneShot]
                        :: (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})) ->
                     (c{v d2pR} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                           (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                            -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                                         -> (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                            -> (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                       (\ ((x14{v a1cr} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Once]
                             :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                          ((y7{v a1cs} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Once]
                             :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
                          (main:Main.plus{v rf} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                         -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                            -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                            ((main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                           -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                               (x14{v a1cr} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            ((main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                           -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                               (y7{v a1cs} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})),
                        (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
                       (n{v d2pS} [lid] :: (a{tv d2pQ} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))}]
(main:Main.baz'{v r8} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
  = (baz'3{v r4b4} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                              (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}
                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       (ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                            -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    (ghc-prim:GHC.Types.Int{(w) tc 3u}
                     -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                         -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
(main:Main.foo'3{v r16} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 0 60}]
(main:Main.foo'3{v r16} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = scc<foo'>
    scc<foo'>
    (main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u})

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.foo'2{v r15} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       (ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u})
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.foo'2{v r15} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
  = ((main:Main.foo'3{v r16} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.foo'1{v r14} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                      (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
          (ghc-prim:GHC.Types.Int{(w) tc 3u}
           -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.foo'1{v r14} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                      (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
  = tick<foo'>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
           (ghc-prim:GHC.Types.Int{(w) tc 3u}
            -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
      (main:Main.foo'2{v r15} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                         (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                         SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
              (ghc-prim:GHC.Types.Int{(w) tc 3u}
               -> ghc-prim:GHC.Types.Int{(w) tc 3u})))

-- RHS size: {terms: 1, types: 0, coercions: 4, joins: 0/0}
(main:Main.foo'{v rb} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       (ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u})
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.foo'1{v r14} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                  (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                     (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                      -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> ghc-prim:GHC.Types.Int{(w) tc 3u})))}]
(main:Main.foo'{v rb} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                 (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
  = (main:Main.foo'1{v r14} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                          (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                           -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}
                      -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       (ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    (ghc-prim:GHC.Types.Int{(w) tc 3u}
                     -> ghc-prim:GHC.Types.Int{(w) tc 3u})))

-- RHS size: {terms: 20, types: 8, coercions: 0, joins: 0/0}
(main:Main.baz{v r7} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u}) [InlPrag=INLINE (sat-args=2)]
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
     -> ghc-prim:GHC.Types.Int{(w) tc 3u}
        -> ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ ((x14{v a1cp} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Once]
                    :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                 ((y7{v a1cq} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Once]
                    :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
                 case (main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                        (x14{v a1cp} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                 return ghc-prim:GHC.Types.Int{(w) tc 3u}
                 of ((wild{v a2Jz} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
                       :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                       Unf=OtherCon [])
                 { ghc-prim:GHC.Types.I#{(w) d 6i} ((x15{v a2JB} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [Occ=Once]
                                                      :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
                 case (main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                        (y7{v a1cq} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                 return ghc-prim:GHC.Types.Int{(w) tc 3u}
                 of ((wild1{v a2JD} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
                       :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                       Unf=OtherCon [])
                 { ghc-prim:GHC.Types.I#{(w) d 6i} ((y8{v a2JF} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) [Occ=Once]
                                                      :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
                 (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                   ((ghc-prim:GHC.Prim.+#{(w) v 98} [gid[PrimOp]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                                     -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                                        -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                      (x15{v a2JB} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                      (y8{v a2JF} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}))
                 }
                 }}]
(main:Main.baz{v r7} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                 -> ghc-prim:GHC.Types.Int{(w) tc 3u})
  = \ ((x14{v a1cp} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      ((y7{v a1cq} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
         :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
      case (x14{v a1cp} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww{v s487} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
            :: ghc-prim:GHC.Types.Int{(w) tc 3u}
            Unf=OtherCon [])
      { ghc-prim:GHC.Types.I#{(w) d 6i} ((ww1{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                                           :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
      case (main:Main.$wfoo{v rE} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                           -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
             (ww1{v s488} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww2{v s48c} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
            :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
            Unf=OtherCon [])
      { __DEFAULT ->
      case (y7{v a1cq} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww3{v s47Y} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}) [Occ=Dead]
            :: ghc-prim:GHC.Types.Int{(w) tc 3u}
            Unf=OtherCon [])
      { ghc-prim:GHC.Types.I#{(w) d 6i} ((ww4{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
                                           :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}) ->
      case (main:Main.$wbar{v rD} [gid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                           -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
             (ww4{v s47Z} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
      return ghc-prim:GHC.Types.Int{(w) tc 3u}
      of ((ww5{v s483} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
            :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
            Unf=OtherCon [])
      { __DEFAULT ->
      (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                         -> ghc-prim:GHC.Types.Int{(w) tc 3u})
        ((ghc-prim:GHC.Prim.+#{(w) v 98} [gid[PrimOp]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                          -> ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                             -> ghc-prim:GHC.Prim.Int#{(w) tc 3s})
           (ww2{v s48c} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s})
           (ww5{v s483} [lid] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}))
      }
      }
      }
      }

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.main16{v r1k} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main16{v r1k} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.main5{v r1l} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.pq{v rh} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.main15{v r1j} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.main15{v r1j} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      -3#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.main14{v r1i} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main14{v r1i} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.main15{v r1j} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main.p_q{v re} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.main13{v r1h} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.main13{v r1h} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      -8#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.main12{v r1g} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main12{v r1g} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.main13{v r1h} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._pq{v r3} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.main11{v r1f} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.main11{v r1f} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      0#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
(main:Main.main10{v r1e} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main10{v r1e} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                    ghc-prim:GHC.Types.Int{(w) tc 3u}
                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
  = ((main:Main.main11{v r1f} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._p_q{v r2} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.main9{v r1u} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main9{v r1u} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.main10{v r1e} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              ghc-prim:GHC.Types.Int{(w) tc 3u}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.main8{v r1t} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main8{v r1t} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.main12{v r1g} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.main9{v r1u} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                         (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                            ghc-prim:GHC.Types.Int{(w) tc 3u}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.main7{v r1s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.main7{v r1s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.main14{v r1i} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.main8{v r1t} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                         (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                            ghc-prim:GHC.Types.Int{(w) tc 3u}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
(main:Main.main6{v r1p} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.main6{v r1p} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                   (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<x>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.main16{v r1k} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.Prop{tc rL})
      (main:Main.main7{v r1s} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                         (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                            ghc-prim:GHC.Types.Int{(w) tc 3u}
                                            SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.x{v rp} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.main6{v r1p} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                  (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                     ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                     SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.x{v rp} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.main6{v r1p} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                          ghc-prim:GHC.Types.Int{(w) tc 3u}
                                          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))

-- RHS size: {terms: 5, types: 5, coercions: 6, joins: 0/0}
(main:Main.main2{v r1d} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 60 0}]
(main:Main.main2{v r1d} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u})
  = scc<main>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.apply{v r1o} [gid] :: forall @(a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                         @(b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                                    SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                      ((a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                             'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                       -> (b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                                    -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                         (a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                       -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                            (b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ ghc-prim:GHC.Types.Int{(w) tc 3u}
      @ ghc-prim:GHC.Types.Int{(w) tc 3u}
      ((SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.apply{v r1o} [gid] :: forall @(a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                            @(b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                         ((a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                          -> (b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                                       -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                            (a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                          -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                               (b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ ghc-prim:GHC.Types.Int{(w) tc 3u}
         @ (ghc-prim:GHC.Types.Int{(w) tc 3u}
            -> ghc-prim:GHC.Types.Int{(w) tc 3u})
         (main:Main.baz'{v r8} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                          (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                           -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                               -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
         ((main:Main.main6{v r1p} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                             (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
          `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                           <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                  :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                       (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                       (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                       (ghc-prim:GHC.Types.[]{(w) tc 3M}
                          (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                             ghc-prim:GHC.Types.Int{(w) tc 3u}))
                       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                          ghc-prim:GHC.Types.Int{(w) tc 3u}))))
      ((main:Main.main3{v r1q} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                          (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                             ghc-prim:GHC.Types.Int{(w) tc 3u}))
       `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                        <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
               :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                    (ghc-prim:GHC.Types.[]{(w) tc 3M}
                       (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                          ghc-prim:GHC.Types.Int{(w) tc 3u}))
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                       ghc-prim:GHC.Types.Int{(w) tc 3u})))

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
(main:Main.main1{v r19} [gid] :: base:GHC.Base.String{tc r1a})
  :: base:GHC.Base.String{tc r1a}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
(main:Main.main1{v r19} [gid] :: base:GHC.Base.String{tc r1a})
  = scc<main>
    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.$fShowVar_$cshow{v r1b} [gid] :: forall @(a{tv a2FD} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                           'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                                               base:GHC.Show.Show{tc 2h}
                                                                                 (a{tv a2FD} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                               -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                                    (a{tv a2FD} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                                  -> base:GHC.Base.String{tc r1a})
      @ ghc-prim:GHC.Types.Int{(w) tc 3u}
      (base:GHC.Show.$fShowInt{v r1c} [gid[DFunId]] :: base:GHC.Show.Show{tc 2h}
                                                         ghc-prim:GHC.Types.Int{(w) tc 3u})
      (main:Main.main2{v r1d} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                         ghc-prim:GHC.Types.Int{(w) tc 3u})

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
(main:Main.main{v rc} [gid] :: ghc-prim:GHC.Types.IO{tc 31Q}
                                 ghc-prim:GHC.Tuple.(){(w) tc 40})
  :: ghc-prim:GHC.Types.IO{tc 31Q} ghc-prim:GHC.Tuple.(){(w) tc 40}
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 40 60}]
(main:Main.main{v rc} [gid] :: ghc-prim:GHC.Types.IO{tc 31Q}
                                 ghc-prim:GHC.Tuple.(){(w) tc 40})
  = scctick<main>
    (base:GHC.IO.Handle.Text.hPutStr'{v r17} [gid] :: base:GHC.IO.Handle.Types.Handle{tc r1dJ}
                                                      -> base:GHC.Base.String{tc r1a}
                                                         -> ghc-prim:GHC.Types.Bool{(w) tc 38}
                                                            -> ghc-prim:GHC.Types.IO{tc 31Q}
                                                                 ghc-prim:GHC.Tuple.(){(w) tc 40})
      (base:GHC.IO.Handle.FD.stdout{v r18} [gid] :: base:GHC.IO.Handle.Types.Handle{tc r1dJ})
      (main:Main.main1{v r19} [gid] :: base:GHC.Base.String{tc r1a})
      (ghc-prim:GHC.Types.True{(w) v 6K} [gid[DataCon]] :: ghc-prim:GHC.Types.Bool{(w) tc 38})

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
(main:Main.main17{v r1m} [gid] :: ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                    ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                                  -> ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                                       ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                                          ('ghc-prim:GHC.Types.[]{(w) d 6x}
                                             ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                                       (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                          ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                                       ghc-prim:GHC.Tuple.(){(w) tc 40})
  :: ghc-prim:GHC.Prim.State#{(w) tc 31C}
       ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
     -> ghc-prim:GHC.Prim.(#,#){(w) tc 54}
          ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
             ('ghc-prim:GHC.Types.[]{(w) d 6x}
                ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
          (ghc-prim:GHC.Prim.State#{(w) tc 31C}
             ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
          ghc-prim:GHC.Tuple.(){(w) tc 40}
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
(main:Main.main17{v r1m} [gid] :: ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                    ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                                  -> ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                                       ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                                          ('ghc-prim:GHC.Types.[]{(w) d 6x}
                                             ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                                       'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                                       (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                          ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                                       ghc-prim:GHC.Tuple.(){(w) tc 40})
  = (base:GHC.TopHandler.runMainIO1{v r1n} [gid] :: forall {(a{tv a2Fq} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})}.
                                                      ghc-prim:GHC.Types.IO{tc 31Q}
                                                        (a{tv a2Fq} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                      -> ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                                           ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                                                         -> ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                                                              ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                                                                 ('ghc-prim:GHC.Types.[]{(w) d 6x}
                                                                    ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                                                              (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                                                 ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                                                              (a{tv a2Fq} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ ghc-prim:GHC.Tuple.(){(w) tc 40}
      (main:Main.main{v rc} [gid] :: ghc-prim:GHC.Types.IO{tc 31Q}
                                       ghc-prim:GHC.Tuple.(){(w) tc 40})

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main::Main.main{v 01D} [gid] :: ghc-prim:GHC.Types.IO{tc 31Q}
                                   ghc-prim:GHC.Tuple.(){(w) tc 40})
  :: ghc-prim:GHC.Types.IO{tc 31Q} ghc-prim:GHC.Tuple.(){(w) tc 40}
[GblId,
 Arity=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.main17{v r1m} [gid] :: ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                                   ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                                                 -> ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                                                      ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                                                         ('ghc-prim:GHC.Types.[]{(w) d 6x}
                                                            ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                                                      (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                                         ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                                                      ghc-prim:GHC.Tuple.(){(w) tc 40})
               `cast` (Sym (ghc-prim:GHC.Types.N:IO{tc ruX}[0] <()>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                               ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                             -> (ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                                   ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                                      ('ghc-prim:GHC.Types.[]{(w) d 6x}
                                         ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                                   (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                      ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                                   ghc-prim:GHC.Tuple.(){(w) tc 40}))
                            (ghc-prim:GHC.Types.IO{tc 31Q} ghc-prim:GHC.Tuple.(){(w) tc 40}))}]
(main::Main.main{v 01D} [gid] :: ghc-prim:GHC.Types.IO{tc 31Q}
                                   ghc-prim:GHC.Tuple.(){(w) tc 40})
  = (main:Main.main17{v r1m} [gid] :: ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                        ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                                      -> ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                                           ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                                              ('ghc-prim:GHC.Types.[]{(w) d 6x}
                                                 ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                                           'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                                           (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                                              ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                                           ghc-prim:GHC.Tuple.(){(w) tc 40})
    `cast` (Sym (ghc-prim:GHC.Types.N:IO{tc ruX}[0] <()>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                    ghc-prim:GHC.Prim.RealWorld{(w) tc 316}
                  -> (ghc-prim:GHC.Prim.(#,#){(w) tc 54}
                        ('ghc-prim:GHC.Types.TupleRep{(w) d 63u}
                           ('ghc-prim:GHC.Types.[]{(w) d 6x}
                              ghc-prim:GHC.Types.RuntimeRep{(w) tc 334}))
                        'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}
                        (ghc-prim:GHC.Prim.State#{(w) tc 31C}
                           ghc-prim:GHC.Prim.RealWorld{(w) tc 316})
                        ghc-prim:GHC.Tuple.(){(w) tc 40}))
                 (ghc-prim:GHC.Types.IO{tc 31Q} ghc-prim:GHC.Tuple.(){(w) tc 40}))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
(main:Main.y3{v r2u} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
(main:Main.y3{v r2u} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (ghc-prim:GHC.Types.I#{(w) v 6j} [gid[DataCon]] :: ghc-prim:GHC.Prim.Int#{(w) tc 3s}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u})
      -11#

-- RHS size: {terms: 3, types: 2, coercions: 2, joins: 0/0}
(main:Main.y2{v r2t} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
       cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
(main:Main.y2{v r2t} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                ghc-prim:GHC.Types.Int{(w) tc 3u}
                                cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
  = ((main:Main.y3{v r2u} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}),
     (main:Main._p1{v rG} [gid] :: base:GHC.ForeignPtr.ForeignPtr{tc rI}
                                     cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
     `cast` (Sym (cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.N:DDNode{tc rH}[0])
             :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                  (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                  (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                     'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                  (base:GHC.ForeignPtr.ForeignPtr{tc rI}
                     cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.C.CDDNode{tc rJ})
                  cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
(main:Main.y1{v r2r} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  :: ghc-prim:GHC.Types.[]{(w) tc 3M}
       (ghc-prim:GHC.Tuple.(,){(w) tc 44}
          ghc-prim:GHC.Types.Int{(w) tc 3u}
          SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 10 30}]
(main:Main.y1{v r2r} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                   ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
  = scctick<y>
    tick<mkVars>
    (ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                             (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                           -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
      @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
           ghc-prim:GHC.Types.Int{(w) tc 3u}
           SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10})
      (main:Main.y2{v r2t} [gid] :: ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                      ghc-prim:GHC.Types.Int{(w) tc 3u}
                                      cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF})
      ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                            ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                              (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
         @ (ghc-prim:GHC.Tuple.(,){(w) tc 44}
              ghc-prim:GHC.Types.Int{(w) tc 3u}
              SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
(main:Main.y{v rt} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
       ghc-prim:GHC.Types.Int{(w) tc 3u}
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= (main:Main.y1{v r2r} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                               (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                                  ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                  SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
               `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                       :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                            (ghc-prim:GHC.Types.[]{(w) tc 3M}
                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                  ghc-prim:GHC.Types.Int{(w) tc 3u}))
                            (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                               ghc-prim:GHC.Types.Int{(w) tc 3u}))}]
(main:Main.y{v rt} [gid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                              ghc-prim:GHC.Types.Int{(w) tc 3u})
  = (main:Main.y1{v r2r} [gid] :: ghc-prim:GHC.Types.[]{(w) tc 3M}
                                    (ghc-prim:GHC.Tuple.(,){(w) tc 44}
                                       ghc-prim:GHC.Types.Int{(w) tc 3u}
                                       SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.PresenceCondition{tc r10}))
    `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                     <ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
            :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                 (ghc-prim:GHC.Types.[]{(w) tc 3M}
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                       ghc-prim:GHC.Types.Int{(w) tc 3u}))
                 (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                    ghc-prim:GHC.Types.Int{(w) tc 3u}))


------ Local rules for imported ids --------
"deep/lift0"
    forall.
      SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.apply{v r1o} @ ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                          @ (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                             -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                          (((ghc-prim:GHC.Types.:{(w) v 67} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                                                          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                                                                                (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                                                                -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                                     (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                                                         'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                                                                   -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                                        (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                              @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                                   (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                    -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                        -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
                                                              (\ ((x14{v a1h1} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                                    :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                                 ((y7{v a1h2} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                                    :: ghc-prim:GHC.Types.Int{(w) tc 3u}) ->
                                                                 (main:Main.plus{v rf} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                                -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                                   ((main:Main.foo{v ra} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                                      (x14{v a1h1} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}))
                                                                   ((main:Main.bar{v r5} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                                  -> ghc-prim:GHC.Types.Int{(w) tc 3u})
                                                                      (y7{v a1h2} [lid] :: ghc-prim:GHC.Types.Int{(w) tc 3u})),
                                                               (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
                                                              ((ghc-prim:GHC.Types.[]{(w) v 6y} [gid[DataCon]] :: forall @(a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                                                                                    ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                                                                      (a{tv 11} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                                                          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                                 @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                                      (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                       -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                           -> ghc-prim:GHC.Types.Int{(w) tc 3u})))))
                                                           `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                                                                            <ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                             -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                             -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                                                                   :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                                                                        (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                           'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                        (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                           'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                        (ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                                           (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                                                              (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                               -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
                                                                        (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                           (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                            -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                                                -> ghc-prim:GHC.Types.Int{(w) tc 3u})))))
      = (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.apply{v r1o} [gid] :: forall @(a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                             @(b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                                        SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                          ((a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                           -> (b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                    'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                                        -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                             (a{tv a24N} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                                           -> SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                                                                                (b{tv a24O} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                                      'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
          @ ghc-prim:GHC.Types.Int{(w) tc 3u}
          @ (ghc-prim:GHC.Types.Int{(w) tc 3u}
             -> ghc-prim:GHC.Types.Int{(w) tc 3u})
          (((base:GHC.Base.build{v 04} [gid] :: forall @(a{tv a2pT} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                  (forall @(b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}).
                                                     ((a{tv a2pT} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                      -> ((b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                          -> (b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})))
                                                     -> (b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                                        -> (b{tv a2pU} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                                                  -> ghc-prim:GHC.Types.[]{(w) tc 3M}
                                                       (a{tv a2pT} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                             'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
              @ (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                   (ghc-prim:GHC.Types.Int{(w) tc 3u}
                    -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                        -> ghc-prim:GHC.Types.Int{(w) tc 3u})))
              (\ (@ (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                          'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                 ((c{v d2Fw} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                        (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                         -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                             -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                                      -> (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                               'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                         -> (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                  'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})) [OS=OneShot]
                    :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                         (ghc-prim:GHC.Types.Int{(w) tc 3u}
                          -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                              -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                       -> (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                          -> (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                   'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                 ((n{v d2Fx} [lid] :: (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                            'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})) [OS=OneShot]
                    :: (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                             'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})) ->
                 (c{v d2Fw} [lid] :: SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                                       (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                        -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                            -> ghc-prim:GHC.Types.Int{(w) tc 3u}))
                                     -> (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                              'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                                        -> (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                                 'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))
                   ((main:Main.baz''{v r9} [gid] :: ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                    -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                                                       -> ghc-prim:GHC.Types.Int{(w) tc 3u}),
                    (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:PropBDD.tt{v r2A} [gid] :: cudd-0.1.0.4-CPz8bRLJlSRY8UvrBnWMo:Cudd.Cudd.DDNode{tc rF}))
                   (n{v d2Fx} [lid] :: (a{tv d2Fv} [tv] :: ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                                                             'ghc-prim:GHC.Types.LiftedRep{(w) d 63A}))))
           `cast` (Sym (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.N:Var{tc rX}[0]
                            <ghc-prim:GHC.Types.Int{(w) tc 3u}
                             -> ghc-prim:GHC.Types.Int{(w) tc 3u}
                             -> ghc-prim:GHC.Types.Int{(w) tc 3u}>_R)
                   :: ghc-prim:GHC.Prim.~R#{(w) tc 31K}
                        (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                           'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                        (ghc-prim:GHC.Prim.TYPE{(w) tc 32Q}
                           'ghc-prim:GHC.Types.LiftedRep{(w) d 63A})
                        (ghc-prim:GHC.Types.[]{(w) tc 3M}
                           (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Val{tc rY}
                              (ghc-prim:GHC.Types.Int{(w) tc 3u}
                               -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                   -> ghc-prim:GHC.Types.Int{(w) tc 3u}))))
                        (SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.Var{tc rV}
                           (ghc-prim:GHC.Types.Int{(w) tc 3u}
                            -> (ghc-prim:GHC.Types.Int{(w) tc 3u}
                                -> ghc-prim:GHC.Types.Int{(w) tc 3u})))))

