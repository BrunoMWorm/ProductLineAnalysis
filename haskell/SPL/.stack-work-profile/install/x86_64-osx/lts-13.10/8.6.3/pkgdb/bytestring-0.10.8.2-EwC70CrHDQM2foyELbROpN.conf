name: bytestring
version: 0.10.8.2
id: bytestring-0.10.8.2-EwC70CrHDQM2foyELbROpN
key: bytestring-0.10.8.2-EwC70CrHDQM2foyELbROpN
license: BSD-3-Clause
copyright: Copyright (c) Don Stewart          2005-2009,
           (c) Duncan Coutts        2006-2015,
           (c) David Roundy         2003-2005,
           (c) Jasper Van der Jeugt 2010,
           (c) Simon Meier          2010-2013.
maintainer: Duncan Coutts <duncan@community.haskell.org>
author: Don Stewart,
        Duncan Coutts
homepage: https://github.com/haskell/bytestring
synopsis: Fast, compact, strict and lazy byte strings with a list interface
description:
    An efficient compact, immutable byte string type (both strict and lazy)
    suitable for binary or 8-bit character data.
    .
    The 'ByteString' type represents sequences of bytes or 8-bit characters.
    It is suitable for high performance use, both in terms of large data
    quantities, or high speed requirements. The 'ByteString' functions follow
    the same style as Haskell\'s ordinary lists, so it is easy to convert code
    from using 'String' to 'ByteString'.
    .
    Two 'ByteString' variants are provided:
    .
    * Strict 'ByteString's keep the string as a single large array. This
    makes them convenient for passing data between C and Haskell.
    .
    * Lazy 'ByteString's use a lazy list of strict chunks which makes it
    suitable for I\/O streaming tasks.
    .
    The @Char8@ modules provide a character-based view of the same
    underlying 'ByteString' types. This makes it convenient to handle mixed
    binary and 8-bit character content (which is common in many file formats
    and network protocols).
    .
    The 'Builder' module provides an efficient way to build up 'ByteString's
    in an ad-hoc way by repeated concatenation. This is ideal for fast
    serialisation or pretty printing.
    .
    There is also a 'ShortByteString' type which has a lower memory overhead
    and can can be converted to or from a 'ByteString', but supports very few
    other operations. It is suitable for keeping many short strings in memory.
    .
    'ByteString's are not designed for Unicode. For Unicode strings you should
    use the 'Text' type from the @text@ package.
    .
    These modules are intended to be imported qualified, to avoid name clashes
    with "Prelude" functions, e.g.
    .
    > import qualified Data.ByteString as BS
category: Data
abi: 20ff1d57aec3182080b251f47859dd4a
exposed: True
exposed-modules:
    Data.ByteString Data.ByteString.Builder
    Data.ByteString.Builder.Extra Data.ByteString.Builder.Internal
    Data.ByteString.Builder.Prim Data.ByteString.Builder.Prim.Internal
    Data.ByteString.Char8 Data.ByteString.Internal Data.ByteString.Lazy
    Data.ByteString.Lazy.Builder Data.ByteString.Lazy.Builder.ASCII
    Data.ByteString.Lazy.Builder.Extras Data.ByteString.Lazy.Char8
    Data.ByteString.Lazy.Internal Data.ByteString.Short
    Data.ByteString.Short.Internal Data.ByteString.Unsafe
hidden-modules: Data.ByteString.Builder.ASCII
                Data.ByteString.Builder.Prim.Binary
                Data.ByteString.Builder.Prim.ASCII
                Data.ByteString.Builder.Prim.Internal.Floating
                Data.ByteString.Builder.Prim.Internal.UncheckedShifts
                Data.ByteString.Builder.Prim.Internal.Base16
import-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3/bytestring-0.10.8.2-EwC70CrHDQM2foyELbROpN
library-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3/bytestring-0.10.8.2-EwC70CrHDQM2foyELbROpN
dynamic-library-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3
data-dir: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/share/x86_64-osx-ghc-8.6.3/bytestring-0.10.8.2
hs-libraries: HSbytestring-0.10.8.2-EwC70CrHDQM2foyELbROpN
include-dirs: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/lib/x86_64-osx-ghc-8.6.3/bytestring-0.10.8.2-EwC70CrHDQM2foyELbROpN/include
includes:
    fpstring.h
depends:
    base-4.12.0.0 deepseq-1.4.4.0-GJ4TKdIzIqD9qN12Y71z3 ghc-prim-0.5.3
    integer-gmp-1.0.2.0
haddock-interfaces: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/doc/bytestring-0.10.8.2/bytestring.haddock
haddock-html: /Users/ramy/projects/ProductLineAnalysis/haskell/SPL/.stack-work-profile/install/x86_64-osx/lts-13.10/8.6.3/doc/bytestring-0.10.8.2
