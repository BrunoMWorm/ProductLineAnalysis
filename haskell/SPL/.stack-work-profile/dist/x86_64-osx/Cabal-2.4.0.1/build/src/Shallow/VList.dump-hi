
==================== FINAL INTERFACE ====================
2019-03-10 04:20:05.288238 UTC

interface SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList [hpc] 8063
  interface hash: 5a4fd02417569c27a680ea523db2c52c
  ABI hash: 7609a7a03f08c15f6cec1663b2bd11c5
  export-list hash: 77bfecc7289a2bee3e4f72f3c0f2f67c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ca2e165c3f98f751e941b47797b7b0a9
  opt_hash: 5835274e0c52a5d281a4b935bfdb5c93
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Shallow.VList.mkVList
  Shallow.VList.vCons
  Shallow.VList.vNil
  Shallow.VList.vhead
  Shallow.VList.vlength
  Shallow.VList.vmap
  Shallow.VList.vnull
  Shallow.VList.vtail
  Shallow.VList.|!!|
  Shallow.VList.VList
module dependencies: PropBDD SPL
package dependencies: array-0.5.3.0 base-4.12.0.0
                      containers-0.6.0.1 cudd-0.1.0.4 deepseq-1.4.4.0 ghc-prim-0.5.3
                      integer-gmp-1.0.2.0 parallel-3.2.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Set.Internal
import  -/  SPL 29367586413bfaa8069c603b144284ac
  exports: 40369a917ec8447fc0e3b995fdab7421
  Var 475a314e24adb901a231766e201ad80e
  compact 475a314e24adb901a231766e201ad80e
  liftV c910a1a011d076facadbf03954925c4f
  liftV2 6eb80ae5602cd6b28fa33cd634e05af9
  mkVarT 475a314e24adb901a231766e201ad80e
  restrict 850b00edb49c76f195aff76f6e177550
  undefinedAt 50373db62dc2230495c653d4f83b65f4
  union 0fbaa2c5bc8ee839204cf72c8bb18df3
import  -/  base-4.12.0.0:Data.Foldable 00188ddf89c975fee76bdfad479443c1
import  -/  base-4.12.0.0:GHC.Base cc906f98291a1b830546e99a96674547
import  -/  base-4.12.0.0:GHC.List 734a72beb76d276fb4a0ba2689a5711f
import  -/  base-4.12.0.0:Prelude 5c01365ec01f83bd405ac01cbb9a8d76
e6bb64439cf4b7150c6e16c8019e9944
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Shallow.VList.$trModule3
                   Shallow.VList.$trModule1) -}
a2512d17bfa7a8aaf3c035dbd6f186bf
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Shallow.VList.$trModule2) -}
087ce938222fdf1878d408e7b8ca88a0
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Shallow.VList"#) -}
929e8805a740589999faf393590a776e
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Shallow.VList.$trModule4) -}
45d29ac49537147d1e89efd4c4672ea2
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL"#) -}
a3c15d1731cf7ec846b218cf153b1359
  type VList a = SPL.Var [a]
54b377b35c48f6c6dfd3702d8fa9360a
  mkVList :: [SPL.Var a] -> Shallow.VList.VList a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (xs :: [SPL.Var a]) ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.mkVList} True True} Shallow.VList.mkVList1
                                                                                                @ a
                                                                                                xs) -}
74f2f5e94a466a541ef3afbbf5c02223
  mkVList1 :: [SPL.Var a] -> SPL.Var [a]
  {- Arity: 1, Strictness: <S,1*U> -}
d83605f8f00541978dae454685bd8542
  vCons :: SPL.Var a -> SPL.Var [a] -> SPL.Var [a]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ @ a (x :: SPL.Var a) (xs :: SPL.Var [a]) ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vCons} True True} SPL.compact
                                                                                              @ [a]
                                                                                              (let {
                                                                                                 ds :: SPL.Var
                                                                                                         [a]
                                                                                                 = {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vCons.defs} True True} SPL.liftV2
                                                                                                                                                                                     @ a
                                                                                                                                                                                     @ [a]
                                                                                                                                                                                     @ [a]
                                                                                                                                                                                     (GHC.Types.:
                                                                                                                                                                                        @ a)
                                                                                                                                                                                     x
                                                                                                                                                                                     xs
                                                                                               } in
                                                                                               let {
                                                                                                 ds1 :: [([a],
                                                                                                          PropBDD.Prop)]
                                                                                                 = {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vCons.undefs} True True} SPL.cond'2
                                                                                                                                                                                       @ [a]
                                                                                                                                                                                       (SPL.undefinedAt1
                                                                                                                                                                                          @ a
                                                                                                                                                                                          x)
                                                                                                                                                                                         `cast`
                                                                                                                                                                                       (Sym (Cudd.Cudd.N:DDNode[0]))
                                                                                                                                                                                       xs
                                                                                               } in
                                                                                               ({__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:SPL.union} True True} GHC.Base.++
                                                                                                                                                                   @ ([a],
                                                                                                                                                                      SPL.PresenceCondition)
                                                                                                                                                                   ds
                                                                                                                                                                     `cast`
                                                                                                                                                                   (SPL.N:Var[0]
                                                                                                                                                                        <[a]>_R)
                                                                                                                                                                   ds1)
                                                                                                 `cast`
                                                                                               (Sym (SPL.N:Var[0]
                                                                                                         <[a]>_R)))) -}
c16bc9b36c6b3b9c2c4252ffd3e8627b
  vNil :: SPL.Var [a]
  {- Unfolding: InlineRule (0, True, True)
                Shallow.VList.vNil1
                  `cast`
                (forall (a :: <*>_N). Sym (SPL.N:Var[0] <[a]>_R)) -}
8628511ae3ed3f5294512d389de60cdb
  vNil1 :: [SPL.Val [a]]
  {- Unfolding: (\ @ a ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vNil} True False} GHC.Types.:
                                                                                              @ (SPL.Val
                                                                                                   [a])
                                                                                              (Shallow.VList.vNil2
                                                                                                 @ a)
                                                                                              (GHC.Types.[]
                                                                                                 @ (SPL.Val
                                                                                                      [a]))) -}
4f8784d59d728c8ed05867327ec27eb8
  vNil2 :: ([a], SPL.PresenceCondition)
  {- Strictness: m,
     Unfolding: (\ @ a -> (GHC.Types.[] @ a, PropBDD.tt)) -}
5274c4d224b732ae4874bc0f88002a44
  vhead :: Shallow.VList.VList a -> SPL.Var a
  {- Unfolding: (\ @ a ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vhead} True True} SPL.liftV
                                                                                              @ [a]
                                                                                              @ a
                                                                                              (GHC.List.head
                                                                                                 @ a)) -}
cd4520955f311483f3f0c2c8c86d17a2
  vlength :: Shallow.VList.VList a -> SPL.Var GHC.Types.Int
  {- Unfolding: (\ @ a ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vlength} True True} SPL.liftV
                                                                                                @ [a]
                                                                                                @ GHC.Types.Int
                                                                                                (GHC.List.length
                                                                                                   @ a)) -}
cf277a6c64c90d5af0745d9627031ac0
  vmap ::
    SPL.Var (a -> b) -> Shallow.VList.VList a -> Shallow.VList.VList b
  {- Unfolding: (\ @ a @ b ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vmap} True True} SPL.liftV2
                                                                                             @ (a
                                                                                                -> b)
                                                                                             @ [a]
                                                                                             @ [b]
                                                                                             (GHC.Base.map
                                                                                                @ a
                                                                                                @ b)) -}
3e77d74015536b87d660463df4eef56c
  vnull :: Shallow.VList.VList a -> SPL.Var GHC.Types.Bool
  {- Unfolding: (\ @ a ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vnull} True True} SPL.liftV
                                                                                              @ [a]
                                                                                              @ GHC.Types.Bool
                                                                                              (GHC.List.null
                                                                                                 @ a)) -}
247fddb55abf535b0d380a84eeccaf95
  vtail :: Shallow.VList.VList a -> Shallow.VList.VList a
  {- Unfolding: (\ @ a ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.vtail} True True} SPL.liftV
                                                                                              @ [a]
                                                                                              @ [a]
                                                                                              (GHC.List.tail
                                                                                                 @ a)) -}
296c21d9e3d99a07a70783659714f1fa
  (|!!|) :: Shallow.VList.VList a -> GHC.Types.Int -> SPL.Var a
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (vs :: Shallow.VList.VList a) (i :: GHC.Types.Int) ->
                 {__scc {SPL-0.1.0.0-7EAm8K7cadUG9BMDvVycjL:Shallow.VList.|!!|} True True} SPL.liftV2
                                                                                             @ [a]
                                                                                             @ GHC.Types.Int
                                                                                             @ a
                                                                                             (GHC.List.!!
                                                                                                @ a)
                                                                                             vs
                                                                                             (SPL.mkVarT
                                                                                                @ GHC.Types.Int
                                                                                                i)) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

